#!/bin/bash

REGISTRY=$1
BRANCH_NAME=$2
appName=$3
TAG2=$4
containerPort=$5
nodePort=$6


dockerImage="${REGISTRY}/${TAG2}"
isImage="${BRANCH_NAME}/${appName}"
fromName="${appName}:latest"

jq --arg appName "$appName"  --arg dockerImage "$dockerImage" --arg namespace "$BRANCH_NAME" '.metadata.name = $appName | .metadata.namespace = $namespace | .spec.tags[0].from.name = $dockerImage' imagestream.json > imagestream2.json

jq --arg appName "$appName" --arg fromName "$fromName" --arg port "$containerPort" --arg image "$isImage" --arg namespace "$BRANCH_NAME" '.metadata.name = $appName | .metadata.namespace = $namespace | .spec.template.metadata.labels.name = $appName | .spec.template.spec.containers[0].name = $appName | .spec.template.spec.containers[0].image = $image | .spec.template.spec.containers[0].ports[0].containerPort = ($port | tonumber) | .spec.template.selector.name = $appName | .spec.selector.name = $appName | .spec.triggers[1].imageChangeParams.containerNames[0] = $appName | .spec.triggers[1].imageChangeParams.from.name = $fromName' deployment.json > deployment2.json

jq --arg appName "$appName"  --arg port "$containerPort" --arg nodePort "$nodePort" --arg namespace "$BRANCH_NAME" '.metadata.name = $appName | .metadata.namespace = $namespace | .metadata.labels.name = $appName | .spec.ports[0].port = ($port | tonumber) | .spec.ports[0].nodePort = ($nodePort | tonumber) | .spec.selector.name = $appName' service.json > service2.json


oc apply -f imagestream2.json -n $BRANCH_NAME
oc apply -f deployment2.json -n $BRANCH_NAME
oc import-image -n $BRANCH_NAME ${isImage}:latest
oc apply -f service2.json -n $BRANCH_NAME
